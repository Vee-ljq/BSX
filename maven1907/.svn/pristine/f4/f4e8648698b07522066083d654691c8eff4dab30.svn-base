package com.ry.mapper;


import com.ry.dto.BillDto;
import com.ry.dto.AddressDto;
import com.ry.dto.OrdersDto;

import com.ry.dto.NoPayDto;

import com.github.pagehelper.PageInfo;

import com.ry.pojo.BCustomer;
import com.ry.pojo.BOrderdetail;
import com.ry.pojo.BOrdermain;
import com.ry.pojo.BOrdermainExample;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;

public interface BOrdermainMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_ordermain
     *
     * @mbg.generated Mon Dec 23 15:07:15 CST 2019
     */
    long countByExample(BOrdermainExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_ordermain
     *
     * @mbg.generated Mon Dec 23 15:07:15 CST 2019
     */
    int deleteByExample(BOrdermainExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_ordermain
     *
     * @mbg.generated Mon Dec 23 15:07:15 CST 2019
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_ordermain
     *
     * @mbg.generated Mon Dec 23 15:07:15 CST 2019
     */
    int insert(BOrdermain record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_ordermain
     *
     * @mbg.generated Mon Dec 23 15:07:15 CST 2019
     */
    int insertSelective(BOrdermain record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_ordermain
     *
     * @mbg.generated Mon Dec 23 15:07:15 CST 2019
     */
    List<BOrdermain> selectByExample(BOrdermainExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_ordermain
     *
     * @mbg.generated Mon Dec 23 15:07:15 CST 2019
     */
    BOrdermain selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_ordermain
     *
     * @mbg.generated Mon Dec 23 15:07:15 CST 2019
     */
    int updateByExampleSelective(@Param("record") BOrdermain record, @Param("example") BOrdermainExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_ordermain
     *
     * @mbg.generated Mon Dec 23 15:07:15 CST 2019
     */
    int updateByExample(@Param("record") BOrdermain record, @Param("example") BOrdermainExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_ordermain
     *
     * @mbg.generated Mon Dec 23 15:07:15 CST 2019
     */
    int updateByPrimaryKeySelective(BOrdermain record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_ordermain
     *
     * @mbg.generated Mon Dec 23 15:07:15 CST 2019
     */
    int updateByPrimaryKey(BOrdermain record);

    
    /*查询所有新增订单*/
	List<OrdersDto> selectByPageToday(OrdersDto orderDto);


    /**
     * 左连接查询未付款订单，将用户的nickName显示出来
     */
    List<NoPayDto> selectByCusId(String content);

    
    /**
     * 分页查询所有订单
     * @param ordermain  输入相关查询条件查询
     * @return
     */
    List<OrdersDto> selectSignforByPage(BOrdermain BOrdermain);

    /**
     * 确认收货
     * @param ordersId
     */
	void updateStatusById(Integer ordersId);

  /**
   * 通过多表查询订单id，然后编辑其信息
   */
    NoPayDto selectByOrderId(NoPayDto noPayDto);

    /**根据status查询
     * @return
     */
    List<OrdersDto> selectByStatus(BOrdermain BOrdermain);

	/**查询商品详情
	 * @param detail
	 * @return
	 */
	OrdersDto selectBydetailId(BOrderdetail detail);

	/*******************前台订单管理*******************/
	/**
	 * 查询所有订单信息
	 * @return
	 */
	List<OrdersDto> selectAllOrders(BOrdermain ordermain);

	/**查询所有购买的订单
	 * @return
	 */
	List<BillDto> selectAllGoods(Integer id);

	/**查询总消费
	 * @param id
	 * @return
	 */
	BillDto selectSum(Integer id);

	/**
	 * 查询订单详情的收货地址
	 * @param orderid
	 * @return
	 */
	OrdersDto selectAddress(Integer orderid);
//提交订单，保存订单
	int insertOrddto(OrdersDto orddto);
//获得当前最大的商品id
	int selectMaxId();

	/**查询固定时间内的消费记录
	 * @param id
	 * @return
	 */
	List<BillDto> selectGoodsByDate(Map map);

	/**
	 * 人均消费统计分析
	 * @return
	 */
	List<OrdersDto> rjConsumption();
	/**
	 * 销售金额统计
	 * @return
	 */
	List<OrdersDto> salesmoney();
	

	//更新主表的totalcount
	Integer updateMainTotalPriById(Integer mainid);

	

	/**
	 * 待评价订单数量
	 * @return
	 */
	Integer noEvaluationCount();
	
	/**
	 * 查询今日销售额
	 * @return
	 */
	  String selecttodaymoney();


}