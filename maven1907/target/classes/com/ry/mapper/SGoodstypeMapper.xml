<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ry.mapper.SGoodstypeMapper">
  <resultMap id="BaseResultMap" type="com.ry.pojo.SGoodstype">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 24 12:15:25 CST 2019.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="typeName" jdbcType="VARCHAR" property="typename" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="param1" jdbcType="VARCHAR" property="param1" />
    <result column="param2" jdbcType="VARCHAR" property="param2" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 24 12:15:25 CST 2019.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 24 12:15:25 CST 2019.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 24 12:15:25 CST 2019.
    -->
    id, typeName, pid, status, param1, param2
  </sql>
  <select id="selectByExample" parameterType="com.ry.pojo.SGoodstypeExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 24 12:15:25 CST 2019.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from s_goodstype
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 24 12:15:25 CST 2019.
    -->
    select 
    <include refid="Base_Column_List" />
    from s_goodstype
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 24 12:15:25 CST 2019.
    -->
    delete from s_goodstype
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ry.pojo.SGoodstypeExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 24 12:15:25 CST 2019.
    -->
    delete from s_goodstype
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ry.pojo.SGoodstype">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 24 12:15:25 CST 2019.
    -->
    insert into s_goodstype (id, typeName, pid, 
      status, param1, param2
      )
    values (#{id,jdbcType=INTEGER}, #{typename,jdbcType=VARCHAR}, #{pid,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{param1,jdbcType=VARCHAR}, #{param2,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ry.pojo.SGoodstype">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 24 12:15:25 CST 2019.
    -->
    insert into s_goodstype
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="typename != null">
        typeName,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="param1 != null">
        param1,
      </if>
      <if test="param2 != null">
        param2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="typename != null">
        #{typename,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="param1 != null">
        #{param1,jdbcType=VARCHAR},
      </if>
      <if test="param2 != null">
        #{param2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ry.pojo.SGoodstypeExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 24 12:15:25 CST 2019.
    -->
    select count(*) from s_goodstype
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 24 12:15:25 CST 2019.
    -->
    update s_goodstype
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.typename != null">
        typeName = #{record.typename,jdbcType=VARCHAR},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.param1 != null">
        param1 = #{record.param1,jdbcType=VARCHAR},
      </if>
      <if test="record.param2 != null">
        param2 = #{record.param2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 24 12:15:25 CST 2019.
    -->
    update s_goodstype
    set id = #{record.id,jdbcType=INTEGER},
      typeName = #{record.typename,jdbcType=VARCHAR},
      pid = #{record.pid,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      param1 = #{record.param1,jdbcType=VARCHAR},
      param2 = #{record.param2,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ry.pojo.SGoodstype">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 24 12:15:25 CST 2019.
    -->
    update s_goodstype
    <set>
      <if test="typename != null">
        typeName = #{typename,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="param1 != null">
        param1 = #{param1,jdbcType=VARCHAR},
      </if>
      <if test="param2 != null">
        param2 = #{param2,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ry.pojo.SGoodstype">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 24 12:15:25 CST 2019.
    -->
    update s_goodstype
    set typeName = #{typename,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      param1 = #{param1,jdbcType=VARCHAR},
      param2 = #{param2,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- ***************************** -->
  <resultMap type="com.ry.dto.SGood" id="map1" extends="BaseResultMap">
  	<id column="aaa" property="id" />
  	<result column="yiji" property="typename"/>
  
   <association property="sgtype" javaType="com.ry.pojo.SGoodstype">
   <id column="aa" property="id"/>
 	<result column="erji" property="typename"/>
  </association>
  <association property="user" javaType="com.ry.pojo.SUser">
  	 <id column="id" property="id"/>
 	<result column="realname" property="realname"/>
  </association>
   <association property="bgoods" javaType="com.ry.pojo.BGoods">
  	 <id column="id" property="id"/>
 	<result column="goodsname" property="goodsname"/>
 	<result column="price" property="price"/>
 	<result column="storenum" property="storenum"/>
 	<result column="status" property="status"/>
  </association>
  </resultMap>
   <select id="selectlb" parameterType="com.ry.dto.SGood" resultMap="map1"> 
		SELECT b.goodsName,b.price,c.realName,b.storeNum,a.typeName as yiji,b.status,b.id,f.typeName as erji
		FROM s_goodstype a
		left join 
		s_goodstype f
		on a.pid=f.id
		LEFT join
		b_goods b on a.id=b.typeId
		LEFT join 
		s_user c on b.userId=c.id 
		where b.goodsName like "%${sp}%" 
		GROUP BY b.id desc
  </select>

  
  
  <!-- 查询一级菜单id和名称 -->
  <select id="selectyj" parameterType="com.ry.pojo.SGoodstype" resultType="com.ry.pojo.SGoodstype">
  		select typeName,id from s_goodstype where pid=0
  </select>
  
  
  <select id="selectbl" parameterType="com.ry.dto.SGood" resultMap="map1">
  
SELECT b.goodsName,b.price,b.status,b.storeNum,a.typeName as erji,c.id,c.realName,d.typeName as yiji,a.id as aaa,d.id as aa
from s_goodstype a 
left join b_goods b
on a.id=b.typeId
LEFT JOIN s_user c
on b.userId=c.id
LEFT join s_goodstype d
on a.pid=d.id  where
b.id=#{id}
  
 </select>
  
  
  
  
  
  <!-- 查询所有闪购商品 -->
  <resultMap type="com.ry.dto.BTjgoodsDto" id="quickGoodsMap">
  <id column="id" property="id"/>
  <result column="goodsId" property="goodsid"/>
  <result column="status" property="status"/>
  <result column="type" property="type"/>
  <result column="endDate" property="enddate"/>
 
  
  <association property="goodsname" javaType="string">
  <result column="goodsName" property="goodsname"/>
  </association>
  
  <association property="goods" javaType="BGoods">
   <result column="price" property="price"/>
    <result column="ckPrice" property="ckprice"/>
     <result column="createDate" property="createdate"/>
      <result column="storeNum" property="storenum"/>
      </association> 
      <association property="goodtype" javaType="SGoodstype">
      <result column="typeName" property="typename"/>
      </association>
  </resultMap>
  
  <select id="selectAllQuickGoods" parameterType="com.ry.dto.BTjgoodsDto" resultMap="quickGoodsMap">
SELECT a.*,b.goodsName,b.price,b.ckPrice,b.createDate,b.storeNum   FROM `b_tjgoods`  a LEFT JOIN b_goods b on a.goodsId=b.id 
<where>
a.type=0
<if test="goodsid!=null and goodsid!=''">
  and a.goodsId=#{goodsid}
</if>
<if test="goodsname!=null and goodsname!=''">
and b.goodsName LIKE '%${goodsname}%'</if>
</where>
order by a.id DESC
 </select>


  <!--  查询单个闪购商品信息-->
    <select id="selectTjgoodsdto" parameterType="com.ry.dto.BTjgoodsDto" resultMap="quickGoodsMap">
  SELECT a.*,b.goodsName,b.price,b.ckPrice,b.createDate,b.storeNum   FROM `b_tjgoods`  a LEFT JOIN b_goods b on a.goodsId=b.id 
<where>
a.id=#{id}
</where>  
 </select>
 
 <resultMap type="com.ry.dto.SGood" id="twoMap" extends="BaseResultMap">
	<collection property="Lbgoods" ofType="BGoods">
	<id column="typeid" property="id"/>
	<result column="goodsName" property="goodsname"/>
	<result column="price" property="price"/>
	<result column="indexImg" property="indeximg"/>
	<result column="weight" property="weight"/>
	<result column="unit" property="unit"/>
	</collection>
</resultMap>
<!--查询二级菜单及商品  -->
<select id="selectTwoClass" parameterType="int" resultMap="twoMap">
select a.*,b.id as typeid,b.goodsName,b.price,b.indexImg,b.weight,b.unit from s_goodstype a LEFT JOIN b_goods b on a.id=b.typeId
where a.pid!=0 and a.status=1 
<if test="value!=null and value!=''">
and a.pid=${value}
</if>
</select>
   
   
   
    
 <!--  <resultMap type="com.ry.dto.SGood" id="mapAG" extends="BaseResultMap">
  	<association property="bjgoods" javaType="BTjgoods">
  		<result column="type" property="type"/>
  	</association>
  	<association property="bflgoods" javaType="BFloorgoods">
  		<result column="flag" property="flag"/>
  	</association>
  	<collection property="Lbgoods" ofType="BGoods">
  		<id column="id" property="id"/>	
		<result column="goodsName" property="goodsname"/>
		<result column="price" property="price"/>
		<result column="indexImg" property="indeximg"/>
  	</collection>
  </resultMap>
    -->
    <!--查询所有无活动商品的二级菜单及商品  -->
<!--   <select id="selectAllGoods" resultMap="twoMap">
select * from 
(select a.typeName,b.*,
CASE  WHEN c.type is null THEN -1 ELSE c.type END as type,
CASE WHEN d.flag  is null THEN -1 ELSE d.flag END as flag
from s_goodstype a LEFT JOIN b_goods b ON a.id=b.typeId 
LEFT JOIN b_tjgoods c on b.id = c.goodsId 
left JOIN b_floorgoods d on b.id=d.goodsId where a.pid!=0) a 
where a.status=1 and a.flag in(0,-1)

select a.*,b.id as typeid,b.goodsName from s_goodstype a LEFT JOIN b_goods b on a.id=b.typeId
where a.pid!=0 and a.status=1
  </select>
    -->
    
    <resultMap type="com.ry.dto.SGood" id="towMap" extends="BaseResultMap">
    	<collection property="Lbgoods" ofType="BGoods">
    		<id column="goodsid" property="id"/>
    		<result column="goodsname" property="goodsname"/>
    		<result column="price" property="price"/>
    		<result column="weight" property="weight"/>
    		<result column="unit" property="unit"/>
    		<result column="typeid" property="typeid"/>
    		<result column="indexImg" property="indeximg"/>
    	</collection>
    </resultMap>

<!--查询一级菜单下的二级菜单  -->
<select id="selectBytypeid" parameterType="map" resultMap="towMap">
	select b.id,b.pid,b.typeName,c.id as goodsid,c.typeid,c.goodsname,c.price,c.weight,c.unit,c.indexImg from s_goodstype a 
	LEFT JOIN s_goodstype b on a.id=b.pid
	LEFT JOIN b_goods c on b.id=c.typeid 
	where a.`status`=1 and c.`status`=0
		<if test="flag1==0 or flag1==null">
			and a.id=${typeid}
		</if>
		<if test="zhongl!=null">
			and c.weight like '%${zhongl}%'
		</if>
		<if test="flag1==1">
			and b.id=${typeid}
		</if>
		<if test="dangw!=null">
			and c.unit like '%${dangw}%'
		</if>
</select>

 <select id="selectByGoodsName" parameterType="string" resultMap="towMap">
 	select a.id,a.typeName,b.id as goodsid,b.typeid,b.goodsname,b.price,b.weight,b.unit,b.indexImg from s_goodstype a 
 	LEFT JOIN b_goods b on a.id=b.typeid where b.goodsName like '%${value}%'
 </select>
 

</mapper>