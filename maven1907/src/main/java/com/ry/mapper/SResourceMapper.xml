<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ry.mapper.SResourceMapper">
  <resultMap id="BaseResultMap" type="com.ry.pojo.SResource">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 16 10:52:23 CST 2019.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="resourceName" jdbcType="VARCHAR" property="resourcename" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 16 10:52:23 CST 2019.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 16 10:52:23 CST 2019.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 16 10:52:23 CST 2019.
    -->
    id, resourceName, url, pid, sort, icon
  </sql>
  <select id="selectByExample" parameterType="com.ry.pojo.SResourceExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 16 10:52:23 CST 2019.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from s_resource
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 16 10:52:23 CST 2019.
    -->
    select 
    <include refid="Base_Column_List" />
    from s_resource
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 16 10:52:23 CST 2019.
    -->
    delete from s_resource
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ry.pojo.SResourceExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 16 10:52:23 CST 2019.
    -->
    delete from s_resource
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ry.pojo.SResource">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 16 10:52:23 CST 2019.
    -->
    insert into s_resource (id, resourceName, url, 
      pid, sort, icon)
    values (#{id,jdbcType=INTEGER}, #{resourcename,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{pid,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}, #{icon,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ry.pojo.SResource">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 16 10:52:23 CST 2019.
    -->
    insert into s_resource
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="resourcename != null">
        resourceName,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="icon != null">
        icon,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="resourcename != null">
        #{resourcename,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ry.pojo.SResourceExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 16 10:52:23 CST 2019.
    -->
    select count(*) from s_resource
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 16 10:52:23 CST 2019.
    -->
    update s_resource
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.resourcename != null">
        resourceName = #{record.resourcename,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.icon != null">
        icon = #{record.icon,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 16 10:52:23 CST 2019.
    -->
    update s_resource
    set id = #{record.id,jdbcType=INTEGER},
      resourceName = #{record.resourcename,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      pid = #{record.pid,jdbcType=INTEGER},
      sort = #{record.sort,jdbcType=INTEGER},
      icon = #{record.icon,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ry.pojo.SResource">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 16 10:52:23 CST 2019.
    -->
    update s_resource
    <set>
      <if test="resourcename != null">
        resourceName = #{resourcename,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ry.pojo.SResource">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 16 10:52:23 CST 2019.
    -->
    update s_resource
    set resourceName = #{resourcename,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      icon = #{icon,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- ********************* -->
  <resultMap type="com.ry.dto.TreeNodeDto" id="map1">
  	<!-- 只要是唯一的都可以当作为主键 -->
  	<id column="name" property="name"/>
 	 <result column="open" property="open"/>
  	<collection property="children" ofType="treenode">
  		<result column="childname" property="name"/>
  	</collection>
  </resultMap>
  <select id="selectByTree" resultMap="map1">
  	select a.id,a.resourceName name,true as open,b.resourceName as childname from (
SELECT * FROM `s_resource` where pid = 0) a
left join (select * from s_resource where pid != 0) b on a.id=b.pid
  </select>
  
  <select id="selectResource" resultType="treenode" parameterType="int">
  

select a.*,case when b.id is null then false else true end as checked from (
select id,resourceName as name,pid as pId,case when pid=0 then true else false end open from s_resource ) a left join

(select * from s_roleresource where roleId=#{roleId}) b on a.id=b.resourceId order by a.id asc
  
  </select>
  
  <!-- s_roleresource表的insert-->
  <insert id="insertSroleResource" parameterType="map">
  	insert into s_roleresource(roleid,resourceid) values(#{roleId},#{resourceId})
  </insert>
  <delete id="deleteByRoleIdAndResourceId" parameterType="map">
  	delete from s_roleresource where roleid=#{roleId} and resourceid=#{resourceId}
  </delete>
  <!-- 判断表中是否有该资源，有就删，没有就添加 -->
  <select id="selectByRoleIdAndResourceId" parameterType="map" resultType="int">
  	select count(*)  from s_roleresource where roleid=#{roleId} and resourceid=#{resourceId}
  </select>
  
  <delete id="deleteParentAndChild" parameterType="map">
  delete  from s_roleresource where resourceId in (select id from s_resource where id=#{resourceId} or pid=#{resourceId}) and roleId =#{roleId} 
  </delete>

	<select id="selectChildCount" parameterType="map" resultType="int">
	select count(*) from s_roleresource where resourceId in (select id from s_resource where pid = #{resourceId}) and roleId = #{roleId}
	</select>
	
	<insert id="insertParentAndChild" parameterType="map">
		insert into s_roleresource(roleId,resourceId) select ${roleId},id from s_resource where id=#{resourceId} or pid= #{resourceId}
	</insert>
	
	<select id="hasParendPid" parameterType="map" resultType="int">
	select count(*) from s_roleresource where resourceId = (select pid from s_resource where id = #{resourceId}) and roleId = #{roleId}
	</select>
	
	<select id="selectFirstMenu" resultType="sresource" parameterType="int">
	
select b.* from s_roleresource a left join s_resource b on a.resourceId=b.id and roleId=#{roleid} and pid=0
	</select>
	
	<select id="selectChildMenusPid" resultType="sresource" parameterType="int">
		select b.* from s_roleresource a left join s_resource b on a.resourceId=b.id and roleId=#{roleId} and pid=#{pId}
	</select>
	
	<resultMap type="com.ry.dto.LeftListDto" id="map2">
		<id column="resourceName" property="title"/>
		<result column="icon" property="icon"/>
		<result column="url" property="href"/>
		<result column="spread" property="spread" />
		<collection property="children" ofType="leftlist" >
			 
			<result column="dname" property="title"/>
			<result column="dicon" property="icon"/>
			<result column="durl" property="href"/>
			<result column="spread" property="spread"/>
		</collection>
	</resultMap>
	<select id="selectByLeftList" parameterType="int" resultMap="map2">
	select c.*,d.resourceName as dname,d.icon as dicon,d.url as durl,false as spread from (
select b.* from s_roleresource a left join s_resource b on a.resourceId=b.id where pid = 0 and roleId = #{roleId}) c
left join (
select b.* from s_roleresource a left join s_resource b on a.resourceId=b.id where pid != 0 and roleId =#{roleId}) d on c.id=d.pid  

	</select>
	<!-- <resultMap type="leftlist" id="map3">
	<id column="resourceName" property="title"/>
		<result column="icon" property="icon"/>
		<result column="url" property="href"/>
		<result column="spread" property="spread" />
	</resultMap> -->
	<!-- <select id="selectChild" parameterType="int" resultMap="map3">
	select b.*,false as spread from s_roleresource a left join s_resource b on a.resourceId=b.id where pid != 0 and roleId =#{roleId}
	</select> -->
</mapper>